---
- name: Provision infrastructure
  hosts: localhost
  gather_facts: false
  vars:
    cloudstack_clusters: []
  tasks:
    - name: Generating unique name
      set_fact:
        deployment_name: "lab-cs-{{ lab_environment }}-{{ sp_version }}-{{ cs_version }}-{{ plugin_version }}"
    - name: Generating OpenSSH keypair
      openssh_keypair:
        path: "/tmp/{{ deployment_name }}-keypair"
        size: 2048
        comment: "Generated by AWX for lab-cs"
      register: keypair
    - name: Instantiating OpenNebula service
      one_service:
        template_id: "{{ one_template_id }}"
        service_name: "{{ deployment_name }}"
        custom_attrs:
          ENVIRONMENT: "{{ lab_environment }}"
          STORPOOL_VERSION: "{{ sp_version }}"
          CLOUDSTACK_VERSION: "{{ cs_version }}"
          STORPOOL_PLUGIN_VERSION: "{{ plugin_version }}"
          ANSIBLE_PUBLIC_KEY: "{{ (keypair.public_key + ' ' + keypair.comment) | b64encode }}"
        unique: true
      register: one_service
    - name: Adding keypair as Machine credential to AWX
      tower_credential:
        name: "{{ deployment_name }}"
        credential_type: Machine
        organization: "{{ owner }}"
        inputs:
          username: centos
          ssh_key_data: "{{ lookup('file', '/tmp/' + deployment_name + '-keypair') }}"
          ssh_public_key_data: "{{ keypair.public_key }}"
          become_method: sudo
      when: one_service.changed
    - name: Creating AWX inventory
      tower_inventory:
        name: "{{ deployment_name }}"
        organization: "{{ owner }}"
    - name: Creating a list of service role names
      set_fact:
        roles_names: "{{ one_service.roles | map(attribute='name') }}"
    - name: Populating AWX inventory with VMs
      include_role:
        name: populate_inventory
      loop: "{{ roles_names }}"
      vars:
        service_role_name: "{{ item }}"
    - name: Creating parent groups
      block:
        - name: Determining CloudStack cluster groups
          set_fact:
            cloudstack_clusters: "{{ roles_names | map('regex_search', 'cluster_[a-z][0-9]') | select('string') | unique | list }}"
        - name: Creating cluster groups
          tower_group:
            name: "{{ cloudstack_cluster }}"
            inventory: "{{ deployment_name }}"
            children: "{{ roles_names | map ('regex_search', cloudstack_cluster + '.*') | select('string') }}"
          loop: "{{ cloudstack_clusters }}"
          loop_control:
            loop_var: cloudstack_cluster
        - name: Creating storpool_nodes group
          tower_group:
            name: storpool_nodes
            inventory: "{{ deployment_name }}"
            children: "{{ cloudstack_clusters }}"
        - name: Creating cloudstack_hypervisors group
          tower_group:
            name: cloudstack_hypervisors
            inventory: "{{ deployment_name }}"
            children: "{{ cloudstack_clusters }}"
    - name: Creating StorPool deployment Job template
      tower_job_template:
        name: "{{ deployment_name }}"
        organization: "{{ owner }}"
        project: CloudStack Environment Automation
        playbook: deploy_storpool.yaml
        inventory: "{{ deployment_name }}"
        credentials:
          - "{{ deployment_name }}"
        extra_vars:
          sp_version: "{{ sp_version }}"
        become_enabled: true
        verbosity: 2
