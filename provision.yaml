---
- name: Provision infrastructure
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Generating unique name
      set_fact:
        deployment_name: "lab-cs-{{ lab_environment }}-{{ sp_version }}-{{ cs_version }}-{{ plugin_version }}"
    - name: Generating OpenSSH keypair
      openssh_keypair:
        path: "/tmp/{{ deployment_name }}-keypair"
        size: 2048
        comment: "Generated by AWX for lab-cs"
      register: keypair
    - name: Instantiating OpenNebula service
      one_service:
        template_id: "{{ one_template_id }}"
        service_name: "{{ deployment_name }}"
        custom_attrs:
          ENVIRONMENT: "{{ lab_environment }}"
          STORPOOL_VERSION: "{{ sp_version }}"
          CLOUDSTACK_VERSION: "{{ cs_version }}"
          STORPOOL_PLUGIN_VERSION: "{{ plugin_version }}"
          ANSIBLE_PUBLIC_KEY: "{{ (keypair.public_key + ' ' + keypair.comment) | b64encode }}"
        unique: true
      register: one_service
    - name: Adding keypair as Machine credential to AWX
      tower_credential:
        name: "{{ deployment_name }}"
        credential_type: Machine
        organization: "{{ owner }}"
        inputs:
          username: centos
          ssh_key_data: "{{ lookup('file', '/tmp/' + deployment_name + '-keypair') }}"
          ssh_public_key_data: "{{ keypair.public_key }}"
          become_method: sudo
      when: one_service.changed
    - name: Creating AWX inventory
      tower_inventory:
        name: "{{ deployment_name }}"
        organization: "{{ owner }}"
    - name: Populating AWX inventory with VMs
      include_role:
        name: populate_inventory
      loop: "{{ one_service.roles|map(attribute='name') }}"
      vars:
        service_role_name: "{{ item }}"
    - name: Creating AWX Deployment Job template
      tower_job_template:
        name: "{{ deployment_name }}"
        organization: "{{ owner }}"
        project: CloudStack Environment Automation
        playbook: provision.yaml
        inventory: "{{ deployment_name }}"
        credentials:
          - "{{ deployment_name }}"
        become_enabled: true
        verbosity: 2
