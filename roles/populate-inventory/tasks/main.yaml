---
- name: "Retrieving {{ service_role_name }} VMs from OpenNebula"
  one_vm:
    attributes:
      ENVIRONMENT: "{{ lab_environment }}"
      STORPOOL_VERSION: "{{ sp_version }}"
      CLOUDSTACK_VERSION: "{{ cs_version }}"
      STORPOOL_PLUGIN_VERSION: "{{ plugin_version }}"
      ROLE_NAME: "{{ service_role_name }}"
  register: hosts

- name: Adding StorPool VMs to inventory
  block:
    - name: Debug StorPool services detection
      debug:
        msg: "StorPool services detected: {{ service_role_name.split('_')[2:] }}"
        verbosity: 3
    - name: "Adding {{ service_role_name }} VMs to inventory"
      tower_host:
        inventory: "{{ deployment_name }}"
        name: "{{ instance.vm_name }}"
        variables:
          ansible_host: "{{ instance.networks[0].ip }}"
          ansible_user: centos
          node_hostname: "{{ 'lab-cs-' + lab_environment + '-' + (service_role_name | replace('_', '-')) }}"
          one_vm_id: "{{ instance.vm_id }}"
          sp_services: "{{ service_role_name.split('_')[2:] }}"
          sp_ourid: "{{ node_id | int + 1 }}"
          sp_api_interface_mac: "{{ ('mgmt' in service_role_name) | ternary (instance.networks[0].mac, '') }}"
          sp_interface1_mac: "{{ instance.networks[1].mac }}"
          sp_interface2_mac: "{{ instance.networks[2].mac }}"
      loop: "{{ hosts.instances }}"
      loop_control:
        loop_var: instance
        index_var: node_id
  when: 'cluster' in service_role_name

- name: Adding CloudStack management VMs to inventory
  tower_host:
    inventory: "{{ deployment_name }}"
    name: "{{ instance.vm_name }}"
    variables:
      ansible_host: "{{ instance.networks[0].ip }}"
      ansible_user: centos
      node_hostname: "{{ 'lab-cs-' + lab_environment + '-management' }}"
      one_vm_id: "{{ instance.vm_id }}"
      sp_api_interface_mac: "{{ ('mgmt' in service_role_name) | ternary (instance.networks[0].mac, '') }}"
  loop: "{{ hosts.instances }}"
  loop_control:
    loop_var: instance
    index_var: node_id
  when: 'management' in service_role_name

- name: "Adding {{ service_role_name }} VMs to {{ service_role_name }} group"
  tower_group:
    inventory: "{{ deployment_name }}"
    name: "{{ service_role_name }}"
    hosts: "{{ hosts.instances | map(attribute='vm_name') }}"