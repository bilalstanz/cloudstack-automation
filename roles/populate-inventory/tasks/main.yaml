---
- name: "Retrieving {{ service_role_name }} VMs from OpenNebula"
  one_vm:
    attributes:
      ENVIRONMENT: "{{ lab_environment }}"
      STORPOOL_VERSION: "{{ sp_version }}"
      CLOUDSTACK_VERSION: "{{ cs_version }}"
      STORPOOL_PLUGIN_VERSION: "{{ plugin_version }}"
      ROLE_NAME: "{{ service_role_name }}"
  register: hosts
- name: Debug sp_services host variable
  debug:
    msg: "StorPool services detected: {{ ('cluster' in service_role_name) | ternary(service_role_name.split('_')[2:], []) }}"
    verbosity: 2
- name: "Adding {{ service_role_name }} VMs to inventory"
  tower_host:
    inventory: "{{ deployment_name }}"
    name: "{{ instance.vm_name }}"
    variables:
      ansible_host: "{{ instance.networks[0].ip }}"
      ansible_user: centos
      one_vm_id: "{{ instance.vm_id }}"
      sp_services: "{{ ('cluster' in service_role_name) | ternary(service_role_name.split('_')[2:], None) }}"
      sp_ourid: "{{ node_id | int + 1 }}"
      sp_interface1_ip: "{{ instance.networks[1].ip }}"
      sp_interface2_ip: "{{ instance.networks[2].ip }}"
  loop: "{{ hosts.instances }}"
  loop_control:
    loop_var: instance
    index_var: node_id
- name: "Adding {{ service_role_name }} VMs to {{ service_role_name }} group"
  tower_group:
    inventory: "{{ deployment_name }}"
    name: "{{ service_role_name }}"
    hosts: "{{ hosts.instances|map(attribute='vm_name') }}"