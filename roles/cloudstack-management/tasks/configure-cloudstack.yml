- name: Adding CloudStack Zones
  ngine_io.cloudstack.cs_zone:
    name: "{{ zone.name }}"
    dns1: "{{ zone.dns_server }}"
    securitygroups_enabled: yes
    api_url: "http://{{ ansible_host }}:8080/client/api"
    api_key: "{{ cs_api_key }}"
    api_secret: "{{ cs_secret_key }}"
  loop: "{{ sp_cluster_params[lab_environment]['cloudstack_zones'] }}"
  loop_control:
    loop_var: zone

- name: Adding CloudStack physical networks
  ngine_io.cloudstack.cs_physical_network:
    name: physical-network1
    zone: "{{ zone.name }}"
    isolation_method: VLAN
    broadcast_domain_range: POD
    api_url: "http://{{ ansible_host }}:8080/client/api"
    api_key: "{{ cs_api_key }}"
    api_secret: "{{ cs_secret_key }}"
  loop: "{{ sp_cluster_params[lab_environment]['cloudstack_zones'] }}"
  loop_control:
    loop_var: zone

- name: Adding CloudStack management traffic type to physical networks
  ngine_io.cloudstack.cs_traffic_type:
    physical_network: physical-network1
    traffic_type: Management
    zone: "{{ zone.name }}"
    api_url: "http://{{ ansible_host }}:8080/client/api"
    api_key: "{{ cs_api_key }}"
    api_secret: "{{ cs_secret_key }}"
  loop: "{{ sp_cluster_params[lab_environment]['cloudstack_zones'] }}"
  loop_control:
    loop_var: zone

- name: Adding CloudStack guest traffic type to physical networks
  ngine_io.cloudstack.cs_traffic_type:
    physical_network: physical-network1
    traffic_type: Guest
    zone: "{{ zone.name }}"
    api_url: "http://{{ ansible_host }}:8080/client/api"
    api_key: "{{ cs_api_key }}"
    api_secret: "{{ cs_secret_key }}"
  loop: "{{ sp_cluster_params[lab_environment]['cloudstack_zones'] }}"
  loop_control:
    loop_var: zone

- name: Enabling CloudStack physical networks
  ngine_io.cloudstack.cs_physical_network:
    name: physical-network1
    zone: "{{ zone.name }}"
    state: enabled
    api_url: "http://{{ ansible_host }}:8080/client/api"
    api_key: "{{ cs_api_key }}"
    api_secret: "{{ cs_secret_key }}"
  loop: "{{ sp_cluster_params[lab_environment]['cloudstack_zones'] }}"
  loop_control:
    loop_var: zone

- name: Enabling CloudStack Zones
  ngine_io.cloudstack.cs_zone:
    name: "{{ zone.name }}"
    state: enabled
    api_url: "http://{{ ansible_host }}:8080/client/api"
    api_key: "{{ cs_api_key }}"
    api_secret: "{{ cs_secret_key }}"
  loop: "{{ sp_cluster_params[lab_environment]['cloudstack_zones'] }}"
  loop_control:
    loop_var: zone

- name: Adding CloudStack Pods
  ngine_io.cloudstack.cs_pod:
    name: "{{ pod.name }}"
    zone: "{{ pod.zone }}"
    start_ip: "{{ pod.prefix | ansible.utils.ipaddr('-10') | ansible.utils.ipaddr('address') }}"
    end_ip: "{{ pod.prefix | ansible.utils.ipaddr('-2') | ansible.utils.ipaddr('address') }}"
    netmask: "{{ pod.prefix | ansible.utils.ipaddr('netmask') }}"
    gateway: "{{ pod.prefix | ansible.utils.ipaddr('-1') | ansible.utils.ipaddr('address') }}"
    api_url: "http://{{ ansible_host }}:8080/client/api"
    api_key: "{{ cs_api_key }}"
    api_secret: "{{ cs_secret_key }}"
  loop: "{{ sp_cluster_params[lab_environment]['cloudstack_pods'] }}"
  loop_control:
    loop_var: pod

- name: Adding CloudStack clusters
  ngine_io.cloudstack.cs_cluster:
    name: "Cluster-{{ cluster_name }}"
    zone: "{{ cluster_info.zone }}"
    pod: "{{ cluster_info.pod }}"
    cluster_type: CloudManaged
    hypervisor: KVM
    username: "{{ cloudstack_hypervisor_username }}"
    api_url: "http://{{ ansible_host }}:8080/client/api"
    api_key: "{{ cs_api_key }}"
    api_secret: "{{ cs_secret_key }}"
  loop: "{{ sp_cluster_params[lab_environment] | dict2items | selectattr('key', 'contains', 'cluster') | list }}"
  loop_control:
    loop_var: cluster_tuple
  vars:
    cluster_name: "{{ cluster_tuple.key | split ('_') | last | upper }}"
    cluster_info: "{{ cluster_tuple.value }}"
