---
- name: Retrieving initialized disks
  become: true
  command: /usr/sbin/storpool_initdisk --json --list
  register: storpool_inidisk_list

- name: Creating a list of initialized disks
  set_fact:
    initialized_disks: "{{ (storpool_inidisk_list.stdout | from_json)['disks'] | dict2items(key_name='device', value_name='details') | selectattr('details.id', 'defined') | map(attribute='id') | list }}"

- name: Printing list of initialized disks IDs
  debug:
    var: initialized_disks
    verbosity: 2

- name: Creating the virtual placement group
  uri:
    url: "http://{{ sp_cluster_params[lab_environment][cloudstack_cluster]['api_host'] }}:81/ctrl/1.0/PlacementGroupUpdate/virtual"
    headers:
      Authorization: "Storpool v1:{{ sp_cluster_params[lab_environment][cloudstack_cluster]['api_token'] }}"
    method: POST
    body_format: json
    body: >-
      {
         "addDisks": [{{ initialized_disks | join(',') }}]
      }

- name: Creating the virtual template
  uri:
    url: "http://{{ sp_cluster_params[lab_environment][cloudstack_cluster]['api_host'] }}:81/ctrl/1.0/VolumeTemplateCreate"
    headers:
      Authorization: "Storpool v1:{{ sp_cluster_params[lab_environment][cloudstack_cluster]['api_token'] }}"
    method: POST
    body_format: json
    body: >-
      {
         "name": "virtual",
         "replication": 1,
         "placeAll": "virtual"
      }